<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:self="clr-namespace:IDL_for_NaturL"
    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit" x:Class="IDL_for_NaturL.MainWindow"
    mc:Ignorable="d"
    Title="IdL for NaturL" Height="633" Width="1123"
    Icon="ressources\logoicon.png"
    WindowStyle="None"
    AllowsTransparency="True"
    ResizeMode="CanResizeWithGrip"
    MouseLeftButtonDown="Drag_Window">

    <Window.CommandBindings>
        <CommandBinding Command="self:CustomCommands.Exit" CanExecute="ExitCommand_CanExecute"
                        Executed="ExitCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Save" CanExecute="SaveCommand_CanExecute"
                        Executed="SaveCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Open" CanExecute="OpenCommand_CanExecute"
                        Executed="OpenCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.SaveAs" CanExecute="SaveAsCommand_CanExecute"
                        Executed="SaveAsCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Transpile" CanExecute="TranspileCommand_CanExecute"
                        Executed="TranspileCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Execute" CanExecute="ExecuteCommand_CanExecute"
                        Executed="ExecuteCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.NewWindow" CanExecute="NewWindowCommand_CanExecute"
                        Executed="NewWindowCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.NewTab" CanExecute="NewTabCommand_CanExecute"
                        Executed="NewTabCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.New" CanExecute="NewCommand_CanExecute"
                        Executed="NewCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.CloseTab" CanExecute="CloseTabCommand_CanExecute"
                        Executed="CloseTabCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Settings" CanExecute="SettingsCommand_CanExecute"
                        Executed="SettingsCommand_Executed" />


    </Window.CommandBindings>

    <Grid x:Name="idl">
        <Grid.RowDefinitions>
            <RowDefinition Height="489*" />
            <RowDefinition Height="128*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="0*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.RowSpan="2">
            <Grid DockPanel.Dock="Top" Height="29">
                <!--- Close button-->
                <Button Padding="0,0,0,0" BorderThickness="0,0,0,0" ClipToBounds="True" Click="IDL_Closing" Margin="0,0,0,-1" HorizontalAlignment="Right" Width="33" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Red"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="ressources/close1.png" Height="23" Width="24" RenderTransformOrigin="0.5,0.5"/>
                </Button>


                <!-- Minimize window -->
                <Button Padding="0,0,0,0" BorderThickness="0,0,0,0" ClipToBounds="True" Click="Minimize_Window" Margin="1032,0,0,0" HorizontalAlignment="Left" Width="33" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="ressources/minimize1.png" Height="23" Width="24" RenderTransformOrigin="0.5,0.5"/>
                </Button>
            </Grid>
            <Menu DockPanel.Dock="Top" Height="25">
                <MenuItem Header="_File">
                    <MenuItem Header="_New" Command="self:CustomCommands.New" />
                    <MenuItem Header="_New Window" Command="self:CustomCommands.NewWindow" />
                    <MenuItem Header="_New Tab" Command="self:CustomCommands.NewTab" />
                    <MenuItem Header="_Close Tab" Command="self:CustomCommands.CloseTab" />
                    <MenuItem Header="_Open" Command="self:CustomCommands.Open" />
                    <MenuItem Header="_Save" Command="self:CustomCommands.Save" />
                    <MenuItem Header="_Save As..." Command="self:CustomCommands.SaveAs" />
                    <MenuItem Header="_Settings" Command="self:CustomCommands.Settings"/>
                    <Separator />
                    <MenuItem Header="_Exit" Command="self:CustomCommands.Exit" />
                </MenuItem>

                <MenuItem Header="Edit">
                    <MenuItem Header="_Copy" Command="ApplicationCommands.Copy"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="_Paste" Command="ApplicationCommands.Paste"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="_Cut" Command="ApplicationCommands.Cut"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="_Undo" Command="ApplicationCommands.Undo"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="Redo" Command="ApplicationCommands.Redo"
                               CommandTarget="{Binding ElementName=CodeBox_id_}" />

                </MenuItem>
                <MenuItem Width="24" Command="self:CustomCommands.Execute">
                    <MenuItem.Icon>
                        <Image Source="ressources/Untitled.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Width="25" Command="self:CustomCommands.Transpile">
                    <MenuItem.Icon>
                        <Image Source="ressources/transpile.png" />
                    </MenuItem.Icon>
                </MenuItem>


            </Menu>
            <TabControl Name="TabControl" DockPanel.Dock="Top" SelectionChanged="TabControl_OnSelectionChanged">
                <TabItem Header="No File" Name="Tab_id_" Margin="-2,-2,2,0">

                    <Grid Name="python_grid" Background="#FFE5E5E5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="37*" />
                            <RowDefinition Height="10*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="552*" />
                            <ColumnDefinition Width="565*" />
                        </Grid.ColumnDefinitions>
                        <avalonedit:TextEditor
                            Name="python_id_"
                            Text=""
                            IsReadOnly="True"
                            LineNumbersForeground="Black"
                            ShowLineNumbers="True"
                            SyntaxHighlighting="Python"
                            FontFamily="Consolas"
                            FontSize="9pt" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        <Grid Name="grid_codebox">
                            <avalonedit:TextEditor
                                Name="CodeBox_id_"
                                Text=""
                                LineNumbersForeground="Black"
                                ShowLineNumbers="True"
                                SyntaxHighlighting="naturL"
                                FontFamily="Consolas"
                                FontSize="9pt" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Margin="0,0,0,0" />
                        </Grid>
                        <Grid Grid.ColumnSpan="2" Height="120" VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch" Grid.Row="1" />
                        <avalonedit:TextEditor
                            LineNumbersForeground="Black"
                            ShowLineNumbers="True"
                            Text="" IsReadOnly="True" FontFamily="Segoe UI"
                            Name="STD_id_" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch"
                            Grid.Row="1" Grid.ColumnSpan="2" />
                    </Grid>


                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>

</Window>