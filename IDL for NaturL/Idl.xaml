<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:self="clr-namespace:IDL_for_NaturL"
    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
    x:Class="IDL_for_NaturL.MainWindow"
    mc:Ignorable="d"
    Title="IdL for NaturL" Height="633" Width="1123"
    Icon="ressources\logoicon.png"
    WindowStyle="None"
    AllowsTransparency="False"
    ResizeMode="CanResize"
    MouseLeftButtonDown="Drag_Window"
    MouseDoubleClick="Double_Click"
    KeyDown="MainWindow_OnKeyDown">



    <Window.Resources>
        <!-- This is the ressource for the current SCROLLBARS-->
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#ed9200" Opacity="0.7" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0" />
                    <GradientStop Color="#EEE" Offset="0.1" />
                    <GradientStop Color="#EEE" Offset="0.9" />
                    <GradientStop Color="#FFF" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Fill="{StaticResource GlyphBrush}"
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Width="8"
                                Margin="8,0,-2,0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="0" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18"
                              Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"
                               Background="{StaticResource HorizontalNormalBrush}"
                               BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18"
                              Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18"
                              Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1"
                               Background="{StaticResource NormalBrush}"
                               BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18"
                              Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--END FOR SCROLLBAR RESSOURCES-->

        <!-- TAB RESSOURCES-->
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="self:CustomCommands.Exit" CanExecute="ExitCommand_CanExecute"
                        Executed="ExitCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Save" CanExecute="SaveCommand_CanExecute"
                        Executed="SaveCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Open" CanExecute="OpenCommand_CanExecute"
                        Executed="OpenCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.SaveAs" CanExecute="SaveAsCommand_CanExecute"
                        Executed="SaveAsCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Transpile" CanExecute="TranspileCommand_CanExecute"
                        Executed="TranspileCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Execute" CanExecute="ExecuteCommand_CanExecute"
                        Executed="ExecuteCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.NewWindow" CanExecute="NewWindowCommand_CanExecute"
                        Executed="NewWindowCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.NewTab" CanExecute="NewTabCommand_CanExecute"
                        Executed="NewTabCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.New" CanExecute="NewCommand_CanExecute"
                        Executed="NewCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.CloseTab" CanExecute="CloseTabCommand_CanExecute"
                        Executed="CloseTabCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Settings" CanExecute="SettingsCommand_CanExecute"
                        Executed="SettingsCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.Debug" CanExecute="DebugCommand_CanExecute"
                        Executed="DebugCommand_Executed" />


    </Window.CommandBindings>
    <Grid x:Name="idl">
        <!-- White -->
        <Grid.RowDefinitions>
            <RowDefinition Height="489*" />
            <RowDefinition Height="128*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="0*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.RowSpan="2">
            <!-- White -->
            <Grid DockPanel.Dock="Top" Height="30">
                <Image Source="ressources/logoicon.png" HorizontalAlignment="Left" Width="25" Height="25"
                       Margin="10,2,0,2" />
                <Button VerticalAlignment="Center" Height="30" Click="IDL_Closing" HorizontalAlignment="Right"
                        Width="30">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="ressources/close1.png" Height="24" Width="31" />
                </Button>
                <Button Margin="0,0,30,0" VerticalAlignment="Center" Height="30" Click="Window_Resize"
                        HorizontalAlignment="Right" Width="30">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray" />

                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="ressources/resize1.png" Height="21" Width="24" />
                </Button>
                <Button Margin="0,0,60,0" VerticalAlignment="Center" Height="30" Click="Window_Minimize"
                        HorizontalAlignment="Right" Width="33">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray" />

                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="ressources/minimize1.png" Height="25" Width="29" />
                </Button>
                <TextBlock Text="idL for naturL" HorizontalAlignment="Left" Margin="51,0,0,0" TextWrapping="Wrap" FontWeight="Bold" FontSize="15"
                           VerticalAlignment="Center" />


            </Grid>
            <Menu DockPanel.Dock="Top" Height="39" Background="White">
                <!-- White -->
                <MenuItem Header="_File" Height="38">
                    <MenuItem Header="_New" Command="self:CustomCommands.New" />
                    <MenuItem Header="_New Window" Command="self:CustomCommands.NewWindow" />
                    <MenuItem Header="_New Tab" Command="self:CustomCommands.NewTab" />
                    <MenuItem Header="_Close Tab" Command="self:CustomCommands.CloseTab" />
                    <MenuItem Header="_Open" Command="self:CustomCommands.Open" />
                    <MenuItem Header="_Save" Command="self:CustomCommands.Save" />
                    <MenuItem Header="_Save As..." Command="self:CustomCommands.SaveAs" />
                    <MenuItem Header="_Settings" Command="self:CustomCommands.Settings" />
                    <Separator />
                    <MenuItem Header="_Exit" Command="self:CustomCommands.Exit" />
                </MenuItem>

                <MenuItem Header="Edit" Height="38">
                    <MenuItem Header="_Copy" Command="ApplicationCommands.Copy"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="_Paste" Command="ApplicationCommands.Paste"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="_Cut" Command="ApplicationCommands.Cut"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="_Undo" Command="ApplicationCommands.Undo"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                    <MenuItem Header="Redo" Command="ApplicationCommands.Redo"
                              CommandTarget="{Binding ElementName=CodeBox_id_}" />
                </MenuItem>
                <MenuItem Header="Language" Height="38">
                    <MenuItem Header="Francais" Height="38" IsCheckable="True" Name="FrenchBox" Click="FrenchBoxClicked">
                    </MenuItem>
                    <MenuItem Header="English" Height="38" IsCheckable="True" Name="EngBox" Click="EngBoxClicked" IsChecked="True">
                    </MenuItem>
                </MenuItem>
                <MenuItem Height="39" Width="51" Header="" Command="self:CustomCommands.Execute">
                    <MenuItem.Icon>
                        <Image Source="ressources/Untitled.png" Margin="-14,-8,-16,-8"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Height="39" Width="51" Header="" Command="self:CustomCommands.Transpile">
                    <MenuItem.Icon>
                        <Image Source="ressources/transpile.png" Margin="-14,-8,-16,-8"/>
                    </MenuItem.Icon>
                </MenuItem>
            </Menu>
            <dragablz:TabablzControl Name="TabControl" DockPanel.Dock="Top" SelectionChanged="TabControl_OnSelectionChanged" >
                <!-- White -->
                <TabItem Header="No File" Name="Tab_id_" Height="10">
                    <!-- White -->

                    <Grid Name="python_grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="37*" />
                            <RowDefinition Height="10*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="552*" />
                            <ColumnDefinition Width="565*" />
                        </Grid.ColumnDefinitions>
                        <!-- White -->
                        <avalonedit:TextEditor
                            Typography.StandardLigatures="True"
                            FontFamily="Consolas"
                            Name="python_id_"
                            Background="#FAFAFA"
                            ShowLineNumbers="True"
                            LineNumbersForeground="#399ee6"
                            SyntaxHighlighting="naturL"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Margin="0,0,0,0"
                            FontSize="12pt"
                            Text=""
                            Grid.Column="1"
                            HorizontalScrollBarVisibility="Hidden">
                        </avalonedit:TextEditor>
                        <Grid Name="grid_codebox">
                            <!-- White -->
                            <avalonedit:TextEditor
                                FontFamily="Consolas"
                                Typography.StandardLigatures="True"
                                Background="#FAFAFA"
                                Name="CodeBox_id_"
                                LineNumbersForeground="#399ee6"
                                ShowLineNumbers="True"
                                SyntaxHighlighting="naturL"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Margin="0,0,0,0"
                                FontSize="12pt"
                                Text=""
                                HorizontalScrollBarVisibility="Hidden" />

                        </Grid>
                        <Grid Grid.ColumnSpan="2" Height="120" VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch" Grid.Row="1" />
                        <!-- White -->
                        <avalonedit:TextEditor
                            FontFamily="Consolas"
                            Name="STD_id_"
                            Background="#FAFAFA"
                            ShowLineNumbers="False"
                            Foreground="Black"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Margin="0,0,0,0"
                            FontSize="12pt"
                            Text=""
                            IsReadOnly="True"
                            Grid.Row="1" Grid.ColumnSpan="2"
                            BorderThickness="1"
                            BorderBrush="Gray"
                            HorizontalScrollBarVisibility="Hidden" />
                        <Separator Grid.Column="1" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" Height="0"
                                   VerticalAlignment="Bottom" />
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                                   RenderTransformOrigin="0.5,0.5" Margin="0,0,-2,0" HorizontalAlignment="Right"
                                   Width="2" />
                    </Grid>
                </TabItem>
            </dragablz:TabablzControl>

        </DockPanel>
    </Grid>

</Window>